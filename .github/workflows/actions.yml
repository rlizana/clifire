name: actions

on: [push, pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Rye
      run: |
        curl -sSf https://rye.astral.sh/get | bash
        echo "$HOME/.rye/shims" >> $GITHUB_PATH
      env:
        RYE_TOOLCHAIN_VERSION: '3.12'
        RYE_VERSION: '0.44.0'
        RYE_INSTALL_OPTION: '--yes'

    - name: Install dependencies
      run: |
        rye pin cpython@3.12.2
        rye sync --all-features

    - name: Run pre-commit
      run: rye run pre-commit run --all-files

  test-legacy:
    runs-on: ubuntu-latest
    container: python:3.6.15-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create compatible setup environment
        run: |
          mv pyproject.toml pyproject.toml.bak
          cat > setup.py << 'EOF'
          from setuptools import setup, find_packages

          setup(
              name='clifire',
              version='0.1.8',
              packages=find_packages(where='src'),
              package_dir={'': 'src'},
              install_requires=[
                  'rich<13.0.0',
                  'pyyaml',
                  'jinja2<3.1.0',
              ],
          )
          EOF

      - name: Install dependencies
        run: |
          python -m pip install --upgrade "pip<21.3.2"
          pip install "pytest<7.1.0" "coverage<7.0.0" coveralls
          pip install -e .

      - name: Run unit tests
        run: python -m pytest

  test-modern:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python for Rye
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Rye
        run: |
          curl -sSf https://rye.astral.sh/get | bash
          echo "$HOME/.rye/shims" >> $GITHUB_PATH
        env:
          RYE_INSTALL_OPTION: '--yes'

      - name: Install dependencies
        run: |
          rye pin cpython@3.12.2
          rye sync --all-features

      - name: Run unit tests
        run: rye run coverage run -m pytest

      - name: Generate coverage report
        run: rye run coverage xml

      - name: Upload coverage to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          pip install coveralls
          coveralls
